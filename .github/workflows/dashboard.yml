name: Get Grafana Dashboard Json File

on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      matrixone-branch_or_commitID:
          description: 'matrixone-branch_or_commitID'
          default: 'main'
          required: true
          type: string
      # matrixone-commit_ID:
      #     description: 'matrixone-commit_ID'
      #     default: ''
      #     required: false
      #     type: string
      # gitops-branch:
      #     description: 'gitops-branch'
      #     default: 'main'
      #     required: true
      #     type: string


jobs:
  Get-Json-File:
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.get_gitops_branch_name.uotputs.name }}
    steps:
    - id: get_gitops_branch_name
      run: |
        echo "name=$(echo "$(date +'%Y-%m-%d %H:%M:%S')-${{ inputs.matrixone-branch_or_commitID }}")" >> "$GITHUB_OUTPUT"
        
    - name: checkout repository
      uses: actions/checkout@v4
      with:
        repository: lcxznpy/matrixone
        ref: ${{ inputs.matrixone-branch_or_commitID }}
        fetch-depth: 0
    - name: Use Golang
      uses: actions/setup-go@v4
      with:
        go-version: "1.20.11"
        cache: false
    - name: Deploy Grafana
      run: |
        docker pull grafana/grafana
        docker run -d -p 80:3000 --name=grafana grafana/grafana
    - name: Upload Dashboard configuration
      run: |
        # docker ps -a 
        # ls && pwd
        cd ./pkg/util/metric/v2/dashboard
        go test
    - name: Save file
      run: |
        cd $GITHUB_WORKSPACE
        mkdir dashboard
        curl -s "http://admin:admin@localhost:80/api/search?type=dash-db" | jq -r > data.json
        count=$(jq '. | length' data.json)
        echo $count

        for ((i=0;i < count;i++));do
                uid=$(jq --arg i $i '.[$i|tonumber].uid' data.json)
                uid=${uid//\"}
                title=$(jq --arg i $i '.[$i|tonumber].title' data.json)
                title=${title//\"}
                title=${title// /_}
                curl -s "http://admin:admin@localhost:80/api/dashboards/uid/$uid" | jq .dashboard  > "$GITHUB_WORKSPACE/dashboard/$title.json"
        done
        
    - name: upload json artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dashboard
        path: |
          ./dashboard/*
  Create-branch_And_Pr:
    runs-on: ubuntu-latest
    needs: Get-Json-File
    env: 
      Gitops_branch_name: ${{ needs.Get-Json-File.outputs.output1 }}
    steps:
    - name: checkout repository
      uses: actions/checkout@v4
      with: 
        fetch-depth: 0
    - name: create branch 
      uses: peterjgrainger/action-create-branch@v2.2.0
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN_ACTION }}
      with:
        branch: $Gitops_branch_name
        sha: '${{ github.event.pull_request.head.sha }}'
    - name: change branch 
      run: |
        git config --global user.name "github-action-robot"
        git config --global user.email "github-action-robot@github.com"
        git branch -vv
        git fetch
        git checkout $Gitops_branch_name
        git branch -vv
    - name: Download Json
      uses: actions/download-artifact@v3
      with:
        path: dashboard
        name: dashboard
    - name: ls dashboard file
      run: |
        git branch -vv
        ls -la
        ls -la ./dashboard
        pwd
        ls -la ./dashboard
        # tail 10 ./dashboard/*
    - name: checkout folder exist
      run: |
        ls -la
        rm -rf $GITHUB_WORKSPACE/aliyun/cos-component/unit-resources-chart/grafana/dashboards/json-file
        mkdir -p  $GITHUB_WORKSPACE/aliyun/cos-component/unit-resources-chart/grafana/dashboards/json-file
        ls && pwd 
        mv ./dashboard/* $GITHUB_WORKSPACE/aliyun/cos-component/unit-resources-chart/grafana/dashboards/json-file/
        cd $GITHUB_WORKSPACE/aliyun/cos-component/unit-resources-chart/grafana/dashboards/json-file
        ls && pwd
        cd $GITHUB_WORKSPACE
        ls && pwd
        git add .
        git commit -m "update dashboard"
        # git push origin ${{ inputs.gitops-branch}}
        git branch -vv
    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
          token: ${{ secrets.TOKEN_ACTION }}
          commit-message: Update dependencies
          base: main
          branch: $Gitops_branch_name
          # delete-branch: true
  # Create-PR:
  #   needs: Push
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: checkout repository
  #     uses: actions/checkout@v4
  #   - name: Create Pull Request
  #     uses: peter-evans/create-pull-request@v5
  #     with:
  #         token: ${{ secrets.TOKEN_ACTION }}
  #         commit-message: Update dependencies
  #         base: main
  #         branch: ${{ inputs.gitops-branch}}
    
  # matrixone-commit_ID:
  #         description: 'matrixone-commit_ID'
  #         default: ''
  #         required: true
  #         type: string
