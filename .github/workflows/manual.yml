name: Maunal Test

on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      matrixone-branch_or_commitID:
          description: 'matrixone-branch_or_commitID'
          default: 'main'
          required: true
          type: string

jobs:
  Get-Json-File:
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.get_gitops_branch_name.outputs.name }}
    steps:
    - id: get_gitops_branch_name
      run: |
        echo "name=$(echo "$(date +'%Y-%m-%d %H:%M:%S')-${{ inputs.matrixone-branch_or_commitID }}")" >> "$GITHUB_OUTPUT"
        
    - name: checkout repository
      uses: actions/checkout@v4
      with:
        repository: lcxznpy/matrixone
        ref: ${{ inputs.matrixone-branch_or_commitID }}
        fetch-depth: 0
    # - name: Use Golang
    #   uses: actions/setup-go@v4
    #   with:
    #     go-version: "1.20.11"
    #     cache: false
    # - name: Deploy Grafana
    #   run: |
    #     docker pull grafana/grafana
    #     docker run -d -p 80:3000 --name=grafana grafana/grafana
    # - name: Upload Dashboard configuration
    #   run: |
    #     cd ./pkg/util/metric/v2/dashboard
    #     go test
    # - name: Save file
    #   run: |
    #     cd $GITHUB_WORKSPACE
    #     mkdir dashboard
    #     curl -s "http://admin:admin@localhost:80/api/search?type=dash-db" | jq -r > data.json
    #     count=$(jq '. | length' data.json)
    #     echo $count

    #     for ((i=0;i < count;i++));do
    #             uid=$(jq --arg i $i '.[$i|tonumber].uid' data.json)
    #             uid=${uid//\"}
    #             title=$(jq --arg i $i '.[$i|tonumber].title' data.json)
    #             title=${title//\"}
    #             title=${title// /_}
    #             curl -s "http://admin:admin@localhost:80/api/dashboards/uid/$uid" | jq .dashboard  > "$GITHUB_WORKSPACE/dashboard/$title.json"
    #     done
        
    # - name: upload json artifacts
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: dashboard
    #     path: |
    #       ./dashboard/*
  Create-branch-And-Pr:
    runs-on: ubuntu-latest
    needs: Get-Json-File
    env: 
      Gitops_branch_name: ${{ needs.Get-Json-File.outputs.output1 }}
    steps:
    - name: checkout repository
      uses: actions/checkout@v4
      with: 
        fetch-depth: 0
    - name: Show test
      run: 
        echo ${{ env.Gitops_branch_name }}
